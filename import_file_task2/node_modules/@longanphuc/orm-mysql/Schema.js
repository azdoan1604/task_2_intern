// create a Schema
const conn = require("./Connect.js")
var Tables = []
const CreateTable = async (value,model)=>{
    let column = value()
    let primary = [...column.primary]
    if(primary.length > 0){        
        primary.forEach((e,i)=>{
            primary[i] = "`"+e+"`"
        })
    }
    let sql = `
        CREATE TABLE IF NOT EXISTS \`${column.table}\`(
            ${column.sql.join(" ")}
            ${primary.length > 0?`, PRIMARY KEY(${primary.join(",")})`:``}
        ) ENGINE=${column.ENGINE};
    `
    await conn(sql)
    Tables.push({table_name: column.table})
    // creating a model parallel to creating a table
    if(model){
        let m = require("./model/createModel")
        await m(column.table,column.primary, column.properties)
    }
}

const AlterTable = async(value) => {
    if(Tables == undefined){
        let database = require("./config.json")
        let Tables1 = await conn("SELECT table_name FROM information_schema.tables WHERE table_schema = '"+database.Database.database+"'")
        Tables = Tables1[0]
    }  
    let column = value()
    let check = false
    Tables.forEach(element => {
        if(element.table_name == column.table){
            check = true
            return false
        }
    });
    if(check){
        let sql = `ALTER TABLE \`${column.table}\` ${column.sql.join(" ")}`
        await conn(sql)
    }   
}

const DropTable = async(tableName) =>{
    let sql = `DROP TABLE IF EXISTS \`${tableName}\``
    await conn(sql)
}

module.exports = {
    CreateTable: CreateTable,
    AlterTable: AlterTable,
    DropTable: DropTable
}